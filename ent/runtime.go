// +build tools
// +build tools
// +build tools
// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/m3-app/backend/ent/owner"
	"github.com/m3-app/backend/ent/schema"
	"github.com/m3-app/backend/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	ownerFields := schema.Owner{}.Fields()
	_ = ownerFields
	// ownerDescFirstName is the schema descriptor for first_name field.
	ownerDescFirstName := ownerFields[1].Descriptor()
	// owner.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	owner.FirstNameValidator = ownerDescFirstName.Validators[0].(func(string) error)
	// ownerDescLastName is the schema descriptor for last_name field.
	ownerDescLastName := ownerFields[3].Descriptor()
	// owner.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	owner.LastNameValidator = ownerDescLastName.Validators[0].(func(string) error)
	// ownerDescFullName is the schema descriptor for full_name field.
	ownerDescFullName := ownerFields[4].Descriptor()
	// owner.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	owner.FullNameValidator = ownerDescFullName.Validators[0].(func(string) error)
	// ownerDescIDURL is the schema descriptor for id_url field.
	ownerDescIDURL := ownerFields[5].Descriptor()
	// owner.IDURLValidator is a validator for the "id_url" field. It is called by the builders before save.
	owner.IDURLValidator = ownerDescIDURL.Validators[0].(func(string) error)
	// ownerDescVerified is the schema descriptor for verified field.
	ownerDescVerified := ownerFields[6].Descriptor()
	// owner.DefaultVerified holds the default value on creation for the verified field.
	owner.DefaultVerified = ownerDescVerified.Default.(bool)
	// ownerDescID is the schema descriptor for id field.
	ownerDescID := ownerFields[0].Descriptor()
	// owner.DefaultID holds the default value on creation for the id field.
	owner.DefaultID = ownerDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescActive is the schema descriptor for active field.
	userDescActive := userFields[7].Descriptor()
	// user.DefaultActive holds the default value on creation for the active field.
	user.DefaultActive = userDescActive.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[8].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[9].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
