// Code generated by ent, DO NOT EDIT.

package address

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the address type in the database.
	Label = "address"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldLatitude holds the string denoting the latitude field in the database.
	FieldLatitude = "latitude"
	// FieldLongitude holds the string denoting the longitude field in the database.
	FieldLongitude = "longitude"
	// FieldMapsLink holds the string denoting the maps_link field in the database.
	FieldMapsLink = "maps_link"
	// FieldFullAddress holds the string denoting the full_address field in the database.
	FieldFullAddress = "full_address"
	// EdgeLocation holds the string denoting the location edge name in mutations.
	EdgeLocation = "location"
	// Table holds the table name of the address in the database.
	Table = "addresses"
	// LocationTable is the table that holds the location relation/edge.
	LocationTable = "addresses"
	// LocationInverseTable is the table name for the Location entity.
	// It exists in this package in order to avoid circular dependency with the "location" package.
	LocationInverseTable = "locations"
	// LocationColumn is the table column denoting the location relation/edge.
	LocationColumn = "location_address"
)

// Columns holds all SQL columns for address fields.
var Columns = []string{
	FieldID,
	FieldLatitude,
	FieldLongitude,
	FieldMapsLink,
	FieldFullAddress,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "addresses"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"location_address",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
